library(batchCox)
#real data application
#install.packages("archivist")
require(archivist)
testCox <- archivist::aread('MarcinKosinski/MasterThesis/3eebc99bd231b16a3ea4dbeec9ab5edb')
trainCox<- archivist::aread('MarcinKosinski/MasterThesis/1a06bef4a60a237bb65ca3e2f3f23515')
class(trainCox)
length(trainCox)
head(
trainCox[[1]][ # train data is a list of data frames that corresponds to batches
c(7, 10),    # pick few rows
c(210,302,356,898,911,1092:1093) # pick few columns, and survival outcomes
]
)
formulaSGD <- archivist::aread('MarcinKosinski/MasterThesis/064277e1c2a1fbea36d7d0ac518b9c8d')
# Surv(times, patient.vital_status ~ all posible genes
# how many genes are there in the whole formula?
length(
strsplit(
as.character(formulaSGD)[3],
split = "+",
fixed = T
)[[1]]
)
require(survival)
#our result
system.time(batchCox(
formula = formulaSGD,
data = trainCox,
rate = function(x){1/x},
maxit = 490 # 98*5 / 5 full epoches
) -> model.our)
beta.our<-model.our$coefficients[491]
head(beta.our)
head(order(abs(beta.our)))
head(order(beta.our))
order(beta.our)
head(beta.our)
#coxphSGD
require(coxphSGD)
system.time(coxphSGD(
formula = formulaSGD,
data = trainCox,
learn.rates = function(x){1/x},
max.iter = 490 # 98*5 / 5 full epoches
) -> model.coxph)
beta.our<-model.our$coefficients[[491]]
head(beta.our)
head(order(abs(beta.our)))
beta.our[c("EGFR","BRAF","FLRT2","ATP2B2","TP53")]
beta.our[head(order(abs(beta.our)))]
beta.our[head(order(-abs(beta.our)))]
length(model.coxph$coefficients)
beta.coxph<-model.coxph$coefficients[[491]]
beta.coxph[head(order(-abs(beta.our)))]
beta.coxph[c("EGFR","BRAF","FLRT2","ATP2B2","TP53")]
beta.coxph[head(order(-abs(beta.coxph)))]
require(survival)
set.seed(456)
x <- matrix(sample(0:1, size = 20000, replace = TRUE), ncol = 2)
head(x)
dCox <- CoxData(10^4, lambda = 3, rho = 2, x,
beta = c(2,2), cens.rate = 5)
dCox_list <- list(dCox)
beta.our<-NULL
beta.coxph<-NULL
beta.glmnet<-NULL
for (i in 1:2){
ptm1=proc.time()
results <-
batchCox(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_split,
epsilon     = 1e-5,
rate = function(x){1/(100*sqrt(x))},
initial   = c(0,0),
maxit    = 300)
proc.time()-ptm1
}
for (i in 1:2){
ptm1=proc.time()
results <-
batchCox(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_list,
epsilon     = 1e-5,
rate = function(x){1/(100*sqrt(x))},
initial   = c(0,0),
maxit    = 300)
proc.time()-ptm1
}
proc.time()
ptm1
proc.time()-ptm1
proc.time()-ptm1+ptm1
proc.time()-proc.time
proc.time()-proc.time()
#install.packages("glmnet")
require(glmnet)
require(survival)
attach(dCox)
fit<-glmnet(cbind(x.1,x.2),Surv(time,status),family="cox")
detach(dCox)
fit$beta
dim(fit$beta)
dim(fit$beta)[2]
fit$beta[,dim(fit$beta)[2]]
require(survival)
set.seed(456)
x <- matrix(sample(0:1, size = 20000, replace = TRUE), ncol = 2)
head(x)
dCox <- CoxData(10^4, lambda = 3, rho = 2, x,
beta = c(2,2), cens.rate = 5)
dCox_list <- list(dCox)
beta.our<-NULL
time.our<-proc.time()-proc.time()
beta.coxph<-NULL
time.coxph<-time.our
beta.glmnet<-NULL
time.glmnet<-time.our
attach(dCox)
for (i in 1:2){
ptm1=proc.time()
results <-
batchCox(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_list,
epsilon     = 1e-5,
rate = function(x){1/(100*sqrt(x))},
initial   = c(0,0),
maxit    = 300)
time.our<-time.our+proc.time()-ptm1
beta.our<-cbind(beta.our,results$coefficients[[length(results$coefficients)]])
ptm2=proc.time()
results <-
coxphSGD(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_list,
epsilon     = 1e-5,
learn.rates = function(x){1/(100*sqrt(x))},
beta.zero   = c(0,0),
max.iter    = 300)
time.coxph<-time.coxph+proc.time()-ptm2
beta.coxph<-cbind(beta.coxph,results$coefficients[[length(results$coefficients)]])
ptm3=proc.time()
fit <-
glmnet(cbind(x.1,x.2),Surv(time,status),family="cox")
time.glmnet<-time.glmnet+proc.time()-ptm3
beta.glmnet<-cbind(beta.glmnet,fit$beta[,dim(fit$beta)[2]])
}
beta.our
beta.coxph
beta.glmnet
time.glmnet
time.our
time.coxph
beta.our<-NULL
time.our<-proc.time()-proc.time()
beta.coxph<-NULL
time.coxph<-time.our
beta.glmnet<-NULL
time.glmnet<-time.our
for (i in 1:100){
ptm1=proc.time()
results <-
batchCox(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_list,
epsilon     = 1e-5,
rate = function(x){1/(100*sqrt(x))},
initial   = c(0,0),
maxit    = 300)
time.our<-time.our+proc.time()-ptm1
beta.our<-cbind(beta.our,results$coefficients[[length(results$coefficients)]])
ptm2=proc.time()
results <-
coxphSGD(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_list,
epsilon     = 1e-5,
learn.rates = function(x){1/(100*sqrt(x))},
beta.zero   = c(0,0),
max.iter    = 300)
time.coxph<-time.coxph+proc.time()-ptm2
beta.coxph<-cbind(beta.coxph,results$coefficients[[length(results$coefficients)]])
ptm3=proc.time()
fit <-
glmnet(cbind(x.1,x.2),Surv(time,status),family="cox")
time.glmnet<-time.glmnet+proc.time()-ptm3
beta.glmnet<-cbind(beta.glmnet,fit$beta[,dim(fit$beta)[2]])
}
detach(dCox)
#time
time.our
time.coxph
time.glmnet
#coefficients
rowMeans(beta.our)
#coefficients
rowMeans(beta.our)
rowMeans(beta.coxph)
rowMeans(beta.glmnet)
beta.our[,1:6]
beta.glmnet[,1:6]
batch_id <- sample(1:90, size = 10^5, replace = TRUE)
dCox_split <- split(dCox, batch_id)
set.seed(2134)
batch_id <- sample(1:90, size = 10^5, replace = TRUE)
dCox_split <- split(dCox, batch_id)
beta2.our<-NULL
time2.our<-proc.time()-proc.time()
beta2.coxph<-NULL
time2.coxph<-time2.our
for (i in 1:100){
ptm4=proc.time()
results <-
batchCox(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_split,
epsilon     = 1e-5,
rate = function(x){1/(100*sqrt(x))},
initial   = c(0,0),
maxit    = 300)
time2.our<-time2.our+proc.time()-ptm4
beta2.our<-cbind(beta2.our,results$coefficients[[length(results$coefficients)]])
ptm5=proc.time()
results <-
coxphSGD(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_split,
epsilon     = 1e-5,
learn.rates = function(x){1/(100*sqrt(x))},
beta.zero   = c(0,0),
max.iter    = 300)
time2.coxph<-time2.coxph+proc.time()-ptm2
beta2.coxph<-cbind(beta2.coxph,results$coefficients[[length(results$coefficients)]])
}
#time
time2.our
time2.coxph
#coefficients
rowMeans(beta2.our)
rowMeans(beta2.coxph)
for (i in 1:100){
ptm4=proc.time()
results <-
batchCox(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_split,
epsilon     = 1e-5,
rate = function(x){1/(100*sqrt(x))},
initial   = c(0,0),
maxit    = 300)
time2.our<-time2.our+proc.time()-ptm4
beta2.our<-cbind(beta2.our,results$coefficients[[length(results$coefficients)]])
ptm5=proc.time()
results <-
coxphSGD(formula     = Surv(time, status) ~ x.1+x.2,
data        = dCox_split,
epsilon     = 1e-5,
learn.rates = function(x){1/(100*sqrt(x))},
beta.zero   = c(0,0),
max.iter    = 300)
time2.coxph<-time2.coxph+proc.time()-ptm5
beta2.coxph<-cbind(beta2.coxph,results$coefficients[[length(results$coefficients)]])
}
#time
time2.our
time2.coxph
#coefficients
rowMeans(beta2.our)
rowMeans(beta2.coxph)
beta.our[head(order((beta.our)))]
beta.our<-model.our$coefficients[[491]]
beta.our[head(order(beta.our))]
beta.our[head(order(beta.our))]
beta.our[head(order(-beta.our))]
#our result
system.time(batchCox(
formula = formulaSGD,
data = trainCox,
rate = function(x){1/x},
maxit = 490*2 # 98*5 / 5 full epoches
) -> model.our)
length(model.our$coefficients)
beta.our<-model.our$coefficients[[981]]
beta.our[head(order(-abs(beta.our)))]
beta.our[head(order(-beta.our))]
beta.our[c("EGFR","BRAF","FLRT2","ATP2B2","TP53")]
